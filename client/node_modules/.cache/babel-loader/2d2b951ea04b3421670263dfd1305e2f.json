{"ast":null,"code":"import _defineProperty from \"/Users/guybejerano/IOTFinalProject/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/guybejerano/IOTFinalProject/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/guybejerano/IOTFinalProject/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/guybejerano/IOTFinalProject/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/guybejerano/IOTFinalProject/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/guybejerano/IOTFinalProject/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/guybejerano/IOTFinalProject/client/src/Componnents/CurrentStatus/CurrentStatus.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Paper, Radio, FormControl, FormLabel, FormControlLabel, FormGroup, Checkbox, Typography, FormHelperText } from '@material-ui/core';\nimport styles from './CurrentStatus.css';\nimport { withStyles } from '@material-ui/core/styles';\n\nvar CurrentStatue =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CurrentStatue, _Component);\n\n  function CurrentStatue() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CurrentStatue);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CurrentStatue)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isGasLit: false,\n      isGasLiking: false,\n      arduinoID: \"GuyArduino\"\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.checked));\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(CurrentStatue, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          isGasLit = _this$state.isGasLit,\n          isGasLiking = _this$state.isGasLiking,\n          arduinoID = _this$state.arduinoID;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.root,\n        elevation: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        className: classes.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Current Status\"), React.createElement(Typography, {\n        className: classes.date,\n        component: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Friday, 7 December, 12:37:43\"), React.createElement(\"p\", {\n        className: classes.arduinoID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Arduino Id : \", arduinoID), React.createElement(FormControl, {\n        component: \"fieldset\",\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        component: \"legend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Assign responsibility\"), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: gilad,\n          value: \"isLiking\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }),\n        label: \"Gilad Gray\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: jason,\n          value: \"isLit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }),\n        label: \"Jason Killian\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: antoine,\n          onChange: this.handleChange('antoine'),\n          value: \"antoine\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }),\n        label: \"Antoine Llorca\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(FormHelperText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Be careful\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"is gas liking:\"), React.createElement(Radio, {\n        checked: isGasLit,\n        name: \"radio-button-gas-lit\",\n        \"aria-label\": \"A\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: classes.rowForIndicators,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"is gas lit:\"), isGasLit ? React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Yes\") : React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"No\")))));\n    }\n  }]);\n\n  return CurrentStatue;\n}(Component);\n\nexport default withStyles(styles)(CurrentStatue);","map":{"version":3,"sources":["/Users/guybejerano/IOTFinalProject/client/src/Componnents/CurrentStatus/CurrentStatus.js"],"names":["React","Component","Fragment","Paper","Radio","FormControl","FormLabel","FormControlLabel","FormGroup","Checkbox","Typography","FormHelperText","styles","withStyles","CurrentStatue","state","isGasLit","isGasLiking","arduinoID","handleChange","name","event","setState","target","checked","classes","props","root","title","date","formControl","gilad","jason","antoine","rowForIndicators"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport {Paper, Radio,FormControl,FormLabel,FormControlLabel,FormGroup,Checkbox, Typography,FormHelperText } from '@material-ui/core';\nimport styles from './CurrentStatus.css'\nimport { withStyles } from '@material-ui/core/styles';\n\n\nclass CurrentStatue extends Component {\n    state = {\n        isGasLit: false,\n        isGasLiking: false,\n        arduinoID: \"GuyArduino\",\n    };\n\n\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.checked });\n    };\n    \n    render() {\n        const { classes } = this.props;\n        const {isGasLit, isGasLiking, arduinoID} = this.state;\n        \n        return (\n            \n            <Fragment>\n                <Paper className={classes.root} elevation={1}>                     \n                    <Typography variant=\"h5\" component=\"h3\" className={classes.title}>\n                        Current Status\n                    </Typography>\n                    <Typography className={classes.date} component=\"h6\">\n                        Friday, 7 December, 12:37:43\n                    </Typography>\n                    \n                    <p className={classes.arduinoID}>\n                        Arduino Id : {arduinoID}\n                    </p>\n\n\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={gilad} value=\"isLiking\" />\n                                }\n                                label=\"Gilad Gray\"\n                            />\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={jason} value=\"isLit\" />\n                                }\n                                label=\"Jason Killian\"\n                            />\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={antoine}\n                                        onChange={this.handleChange('antoine')}\n                                        value=\"antoine\"\n                                    />\n                                }\n                                label=\"Antoine Llorca\"\n                            />\n                        </FormGroup>\n                        <FormHelperText>Be careful</FormHelperText>\n                    </FormControl>\n                    \n                    \n                    <div>\n                        <div>\n                            <Typography>\n                                is gas liking: \n                            </Typography>\n                            <Radio\n                                checked={isGasLit}\n                                name=\"radio-button-gas-lit\"\n                                aria-label=\"A\"\n                            />\n                        </div>\n    \n                        <div className={classes.rowForIndicators}>\n                            <Typography>\n                                is gas lit:\n                            </Typography>\n                            {isGasLit ?\n                                <Typography>\n                                    Yes\n                                </Typography>:\n                                <Typography>\n                                    No\n                                </Typography>\n                            }\n                        </div>\n                    </div>\n                </Paper>\n            </Fragment>\n\n   \n        );\n    }\n}\n\nexport default  withStyles(styles)(CurrentStatue);\n"]},"metadata":{},"sourceType":"module"}